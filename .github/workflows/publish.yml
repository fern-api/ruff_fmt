name: Publish

on:
    push:
        tags:
            - "v*"

env:
    CARGO_INCREMENTAL: 0
    CARGO_TERM_COLOR: "always"
    RUST_LOG: "off"

jobs:
    wasm-build:
        name: Wasm build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install wasm-pack
              run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

            - name: Build wasm
              run: ./crates/ruff_fmt/scripts/build.sh

            - name: Package
              run: npm pack
              working-directory: crates/ruff_fmt/pkg

            - name: Upload
              uses: actions/upload-artifact@v4
              with:
                  name: build
                  path: crates/ruff_fmt/pkg

    publish-npm:
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        needs: wasm-build
        permissions:
            id-token: write
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version-file: ".node-version"
                  registry-url: "https://registry.npmjs.org"

            - uses: actions/download-artifact@v4
              with:
                  name: build
                  path: crates/ruff_fmt/pkg

            - run: npm publish --provenance
              working-directory: crates/ruff_fmt/pkg
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    publish-github:
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        needs: wasm-build
        permissions:
            packages: write
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version-file: ".node-version"
                  registry-url: "https://npm.pkg.github.com"

            - uses: actions/download-artifact@v4
              with:
                  name: build
                  path: crates/ruff_fmt/pkg

            - run: npm publish
              working-directory: crates/ruff_fmt/pkg
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    publish-jsr:
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        needs: wasm-build
        permissions:
            contents: read
            id-token: write
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version-file: ".node-version"

            - uses: actions/download-artifact@v4
              with:
                  name: build
                  path: crates/ruff_fmt/pkg

            - run: npx jsr publish
              working-directory: crates/ruff_fmt/pkg

    publish-github-release:
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        needs: wasm-build
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
            - uses: actions/download-artifact@v4
              with:
                  name: build
                  path: crates/ruff_fmt/pkg

            - name: Build dprint plugin
              run: cargo build --release --target=wasm32-unknown-unknown -p ruff_fmt_dprint

            - name: Get tag version
              id: get_tag_version
              run: echo "TAG_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

            - name: Pre-release
              run: |
                  sed -i 's/ruff_fmt\/0.0.0/ruff_fmt\/${{ steps.get_tag_version.outputs.TAG_VERSION }}/' crates/ruff_fmt_dprint/schema.json
                  (cd target/wasm32-unknown-unknown/release/ && mv ruff_fmt_dprint.wasm plugin.wasm)

            - name: Release
              uses: softprops/action-gh-release@9d7c94cfd0a1f3ed45544c887983e9fa900f0564
              with:
                  files: |
                      crates/ruff_fmt/pkg/ruff_fmt_bg.wasm
                      crates/ruff_fmt/pkg/wasm-fmt-ruff_fmt-*.tgz
                      crates/ruff_fmt_dprint/schema.json
                      target/wasm32-unknown-unknown/release/plugin.wasm
